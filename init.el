
;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
;; (package-initialize)

(add-to-list 'load-path "~/.emacs.d/poraodojuca")
(add-to-list 'load-path "~/.emacs.d/poraodojuca/jasmacs")
(add-to-list 'load-path "~/.emacs.d/third")
(add-to-list 'load-path "~/.emacs.d/third/multi-term-20150220.1320-pdj/")
(load-library "debian-init")

(require 'pdj)

(add-hook 'window-setup-hook 'pdj:setup)


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(custom-safe-themes
   '("62425806baaa46dadc3c52e18efa34ac400716619090625f7dbc0a5e38de1e54" "057aba03c7f3468362612363f1efdf14a0ae01d6859f7f8c54622cc6fe848273" "b294b3145199b9edcbb201db37ab3276aa9dfc17ff6660bb06db71a75ce8fd28" "da8e6e5b286cbcec4a1a99f273a466de34763eefd0e84a41c71543b16cd2efac" "938f120eeda938eef2c36b4cc9609d1ad91b3a3666cd63a4be5b70b739004942" default))
 '(package-selected-packages
   '(color-theme-modern dockerfile-mode cython-mode markdown-preview-mode markdown-mode tern-context-coloring yasnippet-snippets browse-kill-ring flycheck-pycheckers pylint yaml-mode js2-mode tern tern-auto-complete yasnippet virtualenvwrapper py-autopep8 magit jedi flycheck buffer-move))
 '(safe-local-variable-values
   '((pdj:test-suite-prefix . " ")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "cotapdm")
     (pdj:project-directory . "/home/juca/mysrc/cotapdm/")
     (pdj:test-suite-prefix . " ")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "aiomediawiki")
     (pdj:project-directory . "/home/juca/mysrc/aiomediawiki/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "yaar")
     (pdj:project-directory . "/home/juca/mysrc/yaar/")
     (pdj:py-autopep8 . "t")
     (jasmacs:jasmine-yaml-path . "tests/site/js-unit/jasmine.yml")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "nadaprafazer")
     (pdj:project-directory . "/home/juca/mysrc/desafios/crawlers/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "idwall-strings")
     (pdj:project-directory . "/home/juca/mysrc/desafios/strings/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "idwall-desafios")
     (pdj:project-directory . "/home/juca/mysrc/idwall-desafios/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "lwtweets")
     (pdj:project-directory . "/home/juca/mysrc/lwtweets/")
     (pdj:venv-name . "anatex")
     (pdj:project-directory . "/home/juca/mysrc/anatex/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "printtweet")
     (pdj:project-directory . "/home/juca/mysrc/printtweet/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "agendasala")
     (pdj:project-directory . "/home/juca/mysrc/agendasala/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "pytest")
     (pdj:venv-name . "work-at-olist")
     (pdj:project-directory . "/home/juca/mysrc/work-at-olist/")
     (pdj:test-suite-prefix . "")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "pylint-mongoengine")
     (pdj:project-directory . "/home/juca/mysrc/pylint-mongoengine/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "jasmindark")
     (pdj:project-directory . "/home/juca/mysrc/jasmindark/")
     (pdj:py-test-suite-prefix . "")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "./build-scripts/check_coverage.sh weedkarma_cms 100")
     (pdj:coverage-command . "./build-scripts/check_coverage.sh anatex 100")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "weedkarma_cms")
     (pdj:project-directory . "/home/juca/mysrc/weedkarma_cms/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "weedkarma")
     (pdj:project-directory . "/home/juca/mysrc/weedkarma/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "asyncamqp")
     (pdj:project-directory . "/home/juca/mysrc/asyncamqp/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "asyncblink")
     (pdj:project-directory . "/home/juca/mysrc/asyncblink/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "ml")
     (pdj:project-directory . "/home/juca/mysrc/ml/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "mongomotor")
     (pdj:project-directory . "/home/juca/mysrc/mongomotor/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh mongomotor")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "mongomotor")
     (pdj:project-directory . "/home/juca/mysrc/mongomotor/")
     (jasmacs:jasmine-yaml-path . "tests/js-unit/jasmine.yml")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python pyromanager.py test")
     (pdj:venv-name . "pyrocumulus")
     (pdj:custom-commands . "t")
     (pdj:project-directory . "/home/juca/mysrc/pyrocumulus/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python pyromanager.py test --settings=settings.test")
     (pdj:venv-name . "araponga")
     (pdj:project-directory . "/home/juca/mysrc/araponga/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "taskspeedometer")
     (pdj:project-directory . "/home/juca/mysrc/taskspeedometer/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "taskspeedometer")
     (pdj:project-directory . "/home/juca/mysrc/taskspeedometer/")
     (pdj:py-autopep8 . "nil")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "fs-staticworkflow3")
     (pdj:project-directory . "/home/juca/mysrc/fs/staticworkflow")
     (pdj:py-autopep8 . "nil")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "ptbkp")
     (pdj:project-directory . "/home/juca/mysrc/ptbkp/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh toxicbuild 100")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "toxicbuild")
     (pdj:project-directory . "/home/juca/mysrc/toxicbuild/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "toxicbuild")
     (pdj:project-directory . "/home/juca/mysrc/toxicbuild/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "toxicbuild")
     (pdj:project-directory . "/home/juca/mysrc/toxicbuild/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "toxicbuild")
     (pdj:project-directory . "/home/juca/mysrc/toxicbuild/")
     (pdj:py-autopep8 . "t")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh")
     (pdj:test-command . "python setup.py test")
     (pdj:venv-name . "toxicbuild")
     (pdj:project-directory . "/home/juca/mysrc/toxicbuild/")
     (pdj:project-directory . "~/mysrc/ptbkp/")
     (pdj:venv-name . "toxicbuild")
     (pdj:project-directory . "/home/juca/mysrc/toxicbuild/")
     (pdj:venv-name . "ptbkp")
     (pdj:project-directory . "/home/juca/mysrc/ptbkp/")
     (pdj:test-command . "python setup.py test")
     (pdj:coverage-command . "./build-scripts/check_coverage.sh toxicbuild 100")
     (pdj:coverage-command . "./build-scripts/check_coverage.sh pylint_mongoengine 100")
     (pdj:py-autopep8 . "t")
     (pdj:venv-name . "mongomotor")
     (pdj:project-directory . "/home/juca/mysrc/mongomotor/")
     (pdj:coverage-command . "./build-scripts/check_coverage.sh")
     (pdj:venv-name . "prosco")
     (pdj:project-directory . "/home/juca/mysrc/prosco/")
     (pdj:test-command . "python pyromanager.py test")
     (pdj:test-command . "python manage.py test")
     (pdj:test-command . "pytest")
     (pdj:test-suite-prefix . "")
     (pdj:venv-name . "pyrocumulus")
     (pdj:project-directory . "/home/juca/mysrc/pyrocumulus/")
     (pdj:py-test-command . "python pyromanager.py test --settings=settings.test")
     (pdj:coverage-command . "./check_coverage.sh")
     (pdj:venv-name . "jaobi")
     (pdj:project-directory . "/home/juca/mysrc/jaobi/")
     (pdj:coverage-command . "sh ./build-scripts/check_coverage.sh pylint_mongoengine 100")
     (pdj:coverage-command . "./build-scripts/check_coverage.sh jaobi 100")))
 '(show-paren-mode t)
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Inconsolata" :foundry "unknown" :slant normal :weight normal :height 120 :width normal)))))
(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)
